rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Users collection - users can manage their own profile and read others' public info
    match /users/{userId} {
      // Users can read and write their own user document
      allow read, write: if request.auth != null && request.auth.uid == userId;
      
      // All authenticated users can read other users' profiles (for social features)
      allow read: if request.auth != null;
    }
    
    // Posts collection - users can create posts and manage their own posts
    match /posts/{postId} {
      // Anyone authenticated can read posts
      allow read: if request.auth != null;
      
      // Users can create posts
      allow create: if request.auth != null 
        && request.auth.uid == request.resource.data.authorId;
      
      // Users can update/delete their own posts
      allow update, delete: if request.auth != null 
        && request.auth.uid == resource.data.authorId;
    }
    
    // Comments collection (nested under posts)
    match /posts/{postId}/comments/{commentId} {
      // Anyone authenticated can read comments
      allow read: if request.auth != null;
      
      // Users can create comments
      allow create: if request.auth != null 
        && request.auth.uid == request.resource.data.authorId;
      
      // Users can update/delete their own comments
      allow update, delete: if request.auth != null 
        && request.auth.uid == resource.data.authorId;
    }
    
    // Likes collection (for posts and comments)
    match /posts/{postId}/likes/{likeId} {
      // Anyone authenticated can read likes
      allow read: if request.auth != null;
      
      // Users can like/unlike posts (create/delete their own like documents)
      allow create, delete: if request.auth != null 
        && request.auth.uid == resource.id;
    }
    
    // Followers collection - for following system
    match /users/{userId}/followers/{followerId} {
      // Users can read their own followers
      allow read: if request.auth != null && request.auth.uid == userId;
      
      // Users can follow/unfollow others
      allow create, delete: if request.auth != null 
        && request.auth.uid == followerId;
    }
    
    match /users/{userId}/following/{followingId} {
      // Users can read who they're following
      allow read: if request.auth != null && request.auth.uid == userId;
      
      // Users can manage their own following list
      allow create, delete: if request.auth != null 
        && request.auth.uid == userId;
    }
    
    // Notifications collection
    match /users/{userId}/notifications/{notificationId} {
      // Users can read and manage their own notifications
      allow read, write: if request.auth != null && request.auth.uid == userId;
      
      // System/other users can create notifications for users
      allow create: if request.auth != null;
    }
    
    // Stories collection (if implementing stories feature)
    match /stories/{storyId} {
      // Anyone authenticated can read active stories
      allow read: if request.auth != null;
      
      // Users can create their own stories
      allow create: if request.auth != null 
        && request.auth.uid == request.resource.data.authorId;
      
      // Users can update/delete their own stories
      allow update, delete: if request.auth != null 
        && request.auth.uid == resource.data.authorId;
    }
    
    // Chat/Messages collection (if implementing chat)
    match /chats/{chatId} {
      // Users can read chats they're part of
      allow read: if request.auth != null 
        && request.auth.uid in resource.data.participants;
      
      // Users can create chats
      allow create: if request.auth != null 
        && request.auth.uid in request.resource.data.participants;
      
      // Participants can update chat metadata
      allow update: if request.auth != null 
        && request.auth.uid in resource.data.participants;
    }
    
    match /chats/{chatId}/messages/{messageId} {
      // Chat participants can read messages
      allow read: if request.auth != null;
      
      // Users can send messages
      allow create: if request.auth != null 
        && request.auth.uid == request.resource.data.senderId;
      
      // Users can update/delete their own messages
      allow update, delete: if request.auth != null 
        && request.auth.uid == resource.data.senderId;
    }
    
    // Search/Discovery collections
    match /hashtags/{hashtagId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null;
    }
    
    // User activity/analytics (optional)
    match /analytics/{document=**} {
      allow read, write: if request.auth != null;
    }
    
    // Admin collection (restrict to admin users only)
    match /admin/{document=**} {
      // Only allow if user has admin claim (set up custom claims)
      allow read, write: if request.auth != null 
        && request.auth.token.admin == true;
    }
    
    // Test collection for debugging (remove in production)
    match /test/{document=**} {
      allow read, write: if request.auth != null;
    }
    
    // Default deny rule for any other collections
    match /{document=**} {
      allow read, write: if false;
    }
  }
}